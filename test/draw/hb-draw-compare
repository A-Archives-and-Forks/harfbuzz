#!/bin/bash

trap "exit" INT

dirname=`dirname "$0"`

# Parse options
output=
font_file=
hb_view=hb-view
hb_info=hb-info
hb_svg_compare=$dirname/hb-svg-compare
tolerance=1
font_size=upem
features=
variations=
face_loader=ot
shaper=ot
font_funcs1=ot
font_funcs2=coretext
unicodes=
quiet=false
help=false
usage=false
while test $# -gt 0; do
	case "$1" in
		-o|--output)
			shift
			output=$1
			shift
			;;
		--font-file)
			shift
			font_file=$1
			shift
			;;
		--hb-view)
			shift
			hb_view=$1
			shift
			;;
		--hb-info)
			shift
			hb_info=$1
			shift
			;;
		--hb-svg-compare)
			shift
			hb_svg_compare=$1
			shift
			;;
		--tolerance)
			shift
			tolerance=$1
			shift
			;;
		--font-size)
			shift
			font_size=$1
			shift
			;;
		--features)
			shift
			features=$1
			shift
			;;
		--variations)
			shift
			variations=$1
			shift
			;;
		--unicodes)
			shift
			unicodes=$1
			shift
			;;
		--face-loader)
			shift
			face_loader=$1
			shift
			;;
		--shaper)
			shift
			shaper=$1
			shift
			;;
		--font-funcs0)
			shift
			font_funcs1=$1
			shift
			;;
		--font-funcs1)
			shift
			font_funcs2=$1
			shift
			;;
		--quiet)
			quiet=true
			shift
			;;
		--help)
			help=true
			shift
			;;
		*)
			if test "x$font_file" == x; then
				font_file=$1
				shift
			else
				unicodes="$unicodes $1"
				shift
			fi
			;;
	esac
done

if test "x$font_file" == x; then
	echo "No font file specified." >&2
	usage=true
fi

if $help || $usage; then
	cmd=`basename "$0"`
	echo "Usage: $cmd [OPTIONS] FONTFILE [UNICODES...]"
	echo "Render a font with two font backends and compare the results."
	echo
	echo "Options:"
	echo "  -o, --output DIR: Output in DIR"
	echo "  --font-file FONTFILE: Font file to render"
	echo "  --hb-view HB_VIEW: Path to hb-view; default $hb_view"
	echo "  --hb-info HB_INFO: Path to hb-info; default $hb_info"
	echo "  --hb-svg-compare HB_SVG_COMPARE: Path to hb-svg-compare; default $hb_svg_compare"
	echo "  --tolerance TOLERANCE: Tolerance for SVG comparison; default $tolerance"
	echo "  --font-size SIZE: Font size; default $font_size"
	echo "  --features FEATURES: Font features; default none"
	echo "  --variations VARIATIONS: Font variations; default none"
	echo "  --face-loader: Face loader; default $face_loader"
	echo "  --shaper: Shaper; default $shaper"
	echo "  --font-funcs0 font_funcs: First font-funcs; default $font_funcs1"
	echo "  --font-funcs1 font_funcs: Second font-funcs; default $font_funcs2"
	echo "  --unicodes CODES: Unicodes to render; default all in font"
	echo "  --quiet: Quiet mode"
	echo "  --help: Print help"
	$usage && exit 1
	exit 0
fi

if ! which "$hb_view" 2>/dev/null >/dev/null; then
	echo "'$hb_view' not found" >&2
	exit 2
fi
if ! which "$hb_info" 2>/dev/null >/dev/null; then
	echo "'$hb_info' not found" >&2
	exit 2
fi
if ! test -f "$font_file"; then
	echo "Font file '$font_file' not found" >&2
	exit 2
fi
if test "x$output" == x; then
	output=`mktemp -d`
	echo "Output in '$output'" >&2
fi

$quiet || echo "Comparing '$font_file' with '$font_funcs1' and '$font_funcs2' font backends. " >&2

if test "x$unicodes" == x; then
	$quiet || echo "No unicodes specified. Using all unicodes in the font." >&2
	unicodes=`hb-info --quiet --list-unicodes "$font_file" | cut -f1`
fi
# Count number of Unicodes
num_unicodes=`echo $unicodes | wc -w`
$quiet || echo "Rendering $num_unicodes characters." >&2

# Sanity check Unicode values
echo $unicodes |
tr ' ' '\n' |
grep -v '^U[+][0-9a-fA-F]\+$' &&
{
	echo "Invalid Unicode values" >&2
	exit 1
}

mkdir -p "$output"

# Render with both font backends
for font_funcs in $font_funcs1 $font_funcs2; do
	$quiet || echo -n "Rendering with font backend '$font_funcs'... " >&2
	funcs_prefix="$output/$font_funcs"
	mkdir -p "$funcs_prefix"
	for unicode in $unicodes; do
		unicode_prefix=${unicode%??}xx
		dir="$funcs_prefix/$unicode_prefix"
		if ! test -d "$dir"; then
			$quiet || echo -n x >&2
		fi
		mkdir -p "$dir"
		svg="$dir/$unicode.svg"
		if test -f "$svg"; then
			continue
		fi
		echo \
			--font-file="$font_file" \
			--unicodes=$unicode \
			--face-loader=$face_loader \
			--shaper=$shaper \
			--font-funcs=$font_funcs \
			--features="$features" \
			--variations="$variations" \
			--output-format=svg \
			--font-size=$font_size \
			--output-file="$svg"
	done |
	sed 's/ /;/g' |
	"$hb_view" --batch
	$quiet || echo "" >&2
done

diff="$output/diff"
rm -f "$diff"
$quiet || echo "Comparing SVGs into '$diff'" >&2
for unicode in $unicodes; do
	unicode_prefix=${unicode%??}xx
	svg1="$output/$font_funcs1/$unicode_prefix/$unicode.svg"
	svg2="$output/$font_funcs2/$unicode_prefix/$unicode.svg"

	if ! test -f "$svg1" || ! test -f "$svg2"; then
		echo "Character $unicode not rendered." >&2
		exit 1
	fi

	if cmp --quiet "$svg1" "$svg2"; then
		continue
	fi

	echo -e "$svg1\t$svg2"
done |
"$hb_svg_compare" "$tolerance" |
while read svg1 svg2; do
	$quiet || echo -e "$svg1\t$svg2"
	echo -e "$svg1\t$svg2" >> "$diff"
done
# Count number of differences
num_diffs=`cat "$diff" | wc -l`
$quiet || echo "Found $num_diffs differences in $num_unicodes characters." >&2
